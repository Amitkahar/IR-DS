1.Install Android Studio and Run Hello World
In the main Welcome to Android Studio window, click "Start a new Android Studio project".
In the New Project window, give your application an Application Name, such as "Hello World".
On the Target Android Devices screen, "Phone and Tablet" should be selected. And you should ensure that API 15: Android 4.0.3 IceCreamSandwich is set as the Minimum SDK.
Click Next.
For the Hello World project, choose the simplest template (as of this writing, the "Empty Activity" project template is the simplest template) available.
In Android Studio, select Tools > Android > AVD Manager, or click the AVD Manager icon AVD Manager Icon in the toolbar.
Click the +Create Virtual Device….
Choose the Nexus 5 hardware device and click Next.
On the System Image screen, from the Recommended tab, choose which version of the Android system to run on the virtual device. 
On System Image screen, choose a system image and click Next.
Verify your configuration, and click Finish.
In Android Studio, select Run > Run app or click the Run icon Android Studio Run icon in the toolbar.
In the Select Deployment Target window, under Available Emulators, select Nexus 5 API 23 and click OK.

2.Create an android app with Interactive User Interface using Layouts.

Start Android Studio and create a new project with the following parameters:

Attribute	Value
Application Name	Hello Toast
Company Name	com.example.android or your own domain
Phone and Tablet Minimum SDK	API15: Android 4.0.3 IceCreamSandwich
Template	Empty Activity
Generate Layout file box	Checked
Backwards Compatibility box	Checked

Select Run > Run app or click the Run icon Run Icon in the toolbar

In the app > res > layout folder, open the activiy_main.xml file (1).


3.Create an android app that demonstrates working with TextView Elements.
Attribute	Value
Application Name	Scrolling Text
Company Name	android.example.com (or your own domain)
Phone and Tablet Minimum SDK	API15: Android 4.0.3 IceCreamSandwich
Template	Empty Activity
Generate Layout File checkbox	Checked
app > res > layout folder, open the activity_main.xml file, and click the Text tab
At the top, or root, of the view hierarchy is a view group such as ConstraintLayout. Change this view group to RelativeLayout. The second line of code now looks something like this:

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
Add a TextView element above the "Hello World" TextView. Add the following attributes to the TextView:

TextView #1 attribute	Value
android:id	"@+id/article_heading"
layout_width	"match_parent"
layout_height	"wrap_content"
android:background	"@color/colorPrimary"
android:textColor	"@android:color/white"
android:padding	"10dp"
android:textAppearance	"@android:style/TextAppearance.Large"
android:textStyle	"bold"
android:text	"Article Title"
android:text attribute's hard-coded string "Article Title" in the TextView to create an entry for it in strings.xml.

		Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<TextView
android:id="@+id/article_heading"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:background="@android:color/holo_blue_dark"
android:padding="@dimen/padding_regular"
android:text="@string/article_title"
android:textAppearance="@android:style/TextAppearance.DeviceDefault.Large"
android:textColor="@android:color/white"
android:textStyle="bold" />
<ScrollView
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_below="@id/article_heading">
<LinearLayout
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:orientation="vertical">
<TextView
android:id="@+id/article_subheading"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:padding="@dimen/padding_regular"
android:text="@string/article_subtitle"
android:textAppearance="@android:style/TextAppearance.DeviceDefault" />
<TextView
android:id="@+id/article"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:autoLink="web"
android:lineSpacingExtra="5sp"
android:padding="@dimen/padding_regular"
android:text="@string/article_text" />
</LinearLayout>
</ScrollView>
</RelativeLayout>
		MainActivity.java
package com.example.scrollingtext;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
public class MainActivity extends AppCompatActivity {
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
}
}
		Strings.xml
<resources>
<string name="app_name">Scrolling Text</string>
<string name="article_title">Beatles Anthology Vol. 1</string>
<string name="article_subtitle">Behind That Locked Door: Beatles
Rarities!</string>
<string name="article_text">In a vault deep inside Abbey Road Studios in
London — protected by an unmarked, triple-locked, police-alarmed door — are
something like 400 hours of unreleased Beatles recordings, starting from June 2,
1962 and ending with the very last tracks recorded for the <i>Let It Be</i>
album. The best of the best were released by Apple Records in the form of the
3-volume Anthology series.
For more information, see the Beatles Time Capsule at
www.rockument.com.
\n\n
This volume starts with the first new Beatle song, “Free as a Bird” (based on a
John Lennon demo, found only on <i>The Lost Lennon Tapes Vol. 28</i>, and
covers the very earliest historical recordings, outtakes from the first albums, and
live recordings from early concerts and BBC Radio sessions.
\n\n
<b>Highlights include:</b>
\n\n
<b><i>Cry for a Shadow</i></b> - Many a Beatle fanatic started down the
outtake road, like I did, with a first listen to this song. Originally titled “Beatle
Bop” and recorded in a single session that yielded four songs (the other three
featured Tony Sheridan with the Beatles as a backing band), “Cry for a
Shadow” is an instrumental written by Lennon and Harrison, which makes it
unique to this day. John Lennon plays rhythm guitar, George Harrison plays
lead guitar, Paul McCartney plays bass, and Pete Best plays drums. The
sessions were produced by Bert Kaempfert in Hamburg, Germany, during the
Beatles’ second visit from April through July of 1961 to play in the
Reeperbahn-section clubs.
\n\n
<b><i>My Bonnie</i></b> and <b><i>Ain’t She Sweet</i></b> — At the
same session, the Beatles played on “My Bonnie” (the first-ever single with
Beatles playing), as the backing band for English singer Tony Sheridan,
originally a member of the Jets. The popularity of this single in Liverpool
brought the Beatles to the attention of Brian Epstein, who worked in the NEMS
record store and tried to meet demand for the disc. John Lennon then sings a
fine “Ain’t She Sweet” (his first-ever released vocal).
\n\n
<b><i>Searchin</i></b> — A Jerry Leiber - Mike Stoller comedy song that
was a hit for the Coasters in 1957, and a popular live favorite of the Beatles.
The Coasters also had a hit with “Besame Mucho” and the Beatles covered that
song as well. Ringo Starr had by now replaced Pete Best on drums. The high
falsetto is George, who also plays a hesitant lead guitar. This is from their first
audition for Decca Records in London on Jan 1., 1962, live in the studio. The
Grateful Dead would later cover “Searchin” with a similar arrangement, Pigpen
doing the Paul vocals. A live version is available on outtake records featuring
the Dead joined by the Beach Boys!
\n\n
<b><i>Love Me Do</i></b> — An early version of the song, played a bit
slower and with more of a blues feeling, and a cool bossa-nova beat in middle.
Paul had to sing while John played harmonica — a first for the group. Pete Best
played drums on this version.
\n\n
<b><i>She Loves You – Till There Was You – Twist and Shout</i></b> —
Live at the Princess Wales Theatre by Leicester Square in London, attended by
the Queen. “Till There Was You” (by Meredith Wilson) is from the musical The
Music Man and a hit for Peggy Lee in 1961. Before playing it, Paul said it was
recorded by his favorite American group, “Sophie Tucker” (which got some
laughs). At the end, John tells the people in the cheaper seats to clap their hands,
and the rest to “rattle your jewelry” and then announces “Twist and Shout” (a
song by Bert Russell and Phil Medley that was first recorded in 1962 by the
Isley Brothers). A film of the performance shows the Queen smiling at John’s
remark.
\n\n
<b><i>Leave My Kitten Alone</i></b> — One of the lost Beatle songs
recorded during the “Beatles For Sale” sessions but never released. This song,
written by Little Willie John, Titus Turner, and James McDougal, was a 1959
R&amp;B hit for Little Willie John and covered by Johnny Preston before the
Beatles tried it and shelved it. A reference to a “big fat bulldog” may have
influenced John’s “Hey Bulldog” (Yellow Submarine album), which is a similar
rocker.
\n\n
<b><i>One After 909</i></b> — A song recorded for the <i>Let It Be</i>
album was actually worked on way back in the beginning, six years earlier. This
take shows how they did it much more slowly, with an R&amp;B feel to it.
</string>
</resources>

4.Create an android app that demonstrates Activity Lifecycle and Instance State
				Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<TextView
android:id="@+id/text_header_reply"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginStart="8dp"
android:layout_marginTop="16dp"
android:text="@string/text_header_reply"
android:textAppearance="@style/TextAppearance.AppCompat.Medium"
android:textStyle="bold"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent"
android:visibility="invisible"
tools:text="Message Received" />
<TextView
android:id= "@+id/text_message_reply"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginStart="8dp"
android:layout_marginTop="8dp"
android:textAppearance="@style/TextAppearance.AppCompat.Medium"
app:layout_constraintStart_toStartOf="parent"
android:visibility="invisible"
app:layout_constraintTop_toBottomOf="@+id/text_header_reply"
/>
<Button
android:id="@+id/button_main"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginEnd="16dp"
android:layout_marginBottom="4dp"
android:onClick="launchSecondActivity"
android:text="SEND"
app:layout_constraintBottom_toBottomOf="parent
" app:layout_constraintEnd_toEndOf="parent"
tools:text="SEND" />
<EditText
android:id="@+id/editText_name"
android:layout_width="0dp"
android:layout_height="wrap_content"
android:layout_marginStart="8dp"
android:layout_marginEnd="8dp"
android:layout_marginBottom="16dp"
android:ems="10"
android:hint="@string/editText_main"
android:inputType="textLongMessage|text"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toStartOf="@+id/button_main"
app:layout_constraintStart_toStartOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
			MainActivity.java
package com.example.twoactivities;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
public class MainActivity extends AppCompatActivity {
public static final String EXTRA_MESSAGE
="com.example.android.twoactivities.extra.MESSAGE";
private EditText mMessageEditText;
public static final int TEXT_REQUEST = 1;
private TextView mReplyHeadTextView;
private TextView mReplyTextView;
private static final String LOG_TAG =MainActivity.class.getSimpleName();
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
mMessageEditText = findViewById(R.id.editText_name);
mReplyHeadTextView = findViewById(R.id.text_header_reply);
mReplyTextView = findViewById(R.id.text_message_reply);
if (savedInstanceState != null) {
boolean isVisible = savedInstanceState.getBoolean("reply_visible");
if (isVisible) {
mReplyHeadTextView.setVisibility(View.VISIBLE);
mReplyTextView.setText(savedInstanceState.getString("reply_text"));
mReplyTextView.setVisibility(View.VISIBLE);
}
}
Log.d(LOG_TAG, " ");
Log.d(LOG_TAG, "onCreate");
}
@Override
protected void onRestart() {
super.onRestart();
Log.d(LOG_TAG, "onRestart");
}
@Override
protected void onResume() {
super.onResume();
Log.d(LOG_TAG, "onResume");
}
@Override
protected void onDestroy() {
super.onDestroy();
Log.d(LOG_TAG, "onDestroy");
}
@Override
protected void onStop() {
super.onStop();
Log.d(LOG_TAG, "onStop");
}
@Override
protected void onPause() {
super.onPause();
Log.d(LOG_TAG, "onPause");
}
@Override
protected void onStart() {
super.onStart();
Log.d(LOG_TAG, "onStart");
}
@Override
public void onSaveInstanceState(Bundle outState) {
super.onSaveInstanceState(outState);
if (mReplyHeadTextView.getVisibility() == View.VISIBLE) {
outState.putBoolean("reply_visible", true);
outState.putString("reply_text",mReplyTextView.getText().toString());
}
}
@Override
public void onActivityResult(int requestCode,int resultCode, Intent data) {
super.onActivityResult(requestCode, resultCode, data);
if (requestCode == TEXT_REQUEST) {
if (resultCode == RESULT_OK) {
String reply = data.getStringExtra(SecondActivity.EXTRA_REPLY);
mReplyHeadTextView.setVisibility(View.VISIBLE);
mReplyTextView.setText(reply);
mReplyTextView.setVisibility(View.VISIBLE);
}
}
}
public void launchSecondActivity(View view) {
Log.d(LOG_TAG, "Button clicked!");
Intent intent = new Intent(this, SecondActivity.class);
String message = mMessageEditText.getText().toString();
intent.putExtra(EXTRA_MESSAGE, message);
startActivityForResult(intent, TEXT_REQUEST);
}
}
		Activity_second.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".SecondActivity">
<TextView
android:id="@+id/text_header"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginStart="8dp"
android:layout_marginTop="16dp"
android:text="@string/text_header"
android:textAppearance="@style/TextAppearance.AppCompat.Medium"
android:textStyle="bold"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent"
tools:text="Message Received" />
<TextView
android:id="@+id/text_message"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginStart="8dp"
android:layout_marginTop="8dp"
android:textAppearance="@style/TextAppearance.AppCompat.Medium"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/text_header" />
<Button
android:id="@+id/button_second"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginEnd="16dp"
android:layout_marginBottom="4dp"
android:onClick="returnReply"
android:text="@string/button_second"
app:layout_constraintBottom_toBottomOf="parent
" app:layout_constraintEnd_toEndOf="parent"
tools:text="SEND" />
<EditText
android:id="@+id/editText_second"
android:layout_width="0dp"
android:layout_height="wrap_content"
android:layout_marginStart="8dp"
android:layout_marginEnd="8dp"
android:layout_marginBottom="16dp"
android:ems="10"
android:hint="@string/editText_second"
android:inputType="textLongMessage|text"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toStartOf="@+id/button_second"
app:layout_constraintStart_toStartOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
			SecondActivity.java
package com.example.twoactivities;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
public class SecondActivity extends AppCompatActivity {
public static final String EXTRA_REPLY
="com.example.android.twoactivities.extra.REPLY";
private EditText mReply;
private static final String LOG_TAG = SecondActivity.class.getSimpleName();
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_second);
mReply = findViewById(R.id.editText_second);
Intent intent = getIntent();
String message = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);
TextView textView = findViewById(R.id.text_message);
textView.setText(message);
}
@Override
protected void onRestart() {
super.onRestart();
Log.d(LOG_TAG, "onRestart");
}
@Override
protected void onResume() {
super.onResume();
Log.d(LOG_TAG, "onResume");
}
@Override
protected void onDestroy() {
super.onDestroy();
Log.d(LOG_TAG, "onDestroy");
}
@Override
protected void onStop() {
super.onStop();
Log.d(LOG_TAG, "onStop");
}
@Override
protected void onPause() {
super.onPause();
Log.d(LOG_TAG, "onPause");
}
@Override
protected void onStart() {
super.onStart();
Log.d(LOG_TAG, "onStart");
}
public void returnReply(View view) {
String reply = mReply.getText().toString();
Intent replyIntent = new Intent();
replyIntent.putExtra(EXTRA_REPLY, reply);
setResult(RESULT_OK,replyIntent);
Log.d(LOG_TAG, "End SecondActivity");
finish();
}
}
			Strings.xml
<resources>
<string name="app_name">Two Activities</string>
<string name="activity2_name">Second Activity</string>
<string name="text_header">Message Received</string>
<string name="editText_main">Enter your message here</string>
<string name="button_second">Reply</string>
<string name="editText_second">Enter Your Reply Here</string>
<string name="text_header_reply">Reply Received</string>
</resources>
		Android_Manifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
package="com.example.twoactivities">
<application
android:allowBackup="true"
android:icon="@mipmap/ic_launcher
" android:label="@string/app_name"
android:roundIcon="@mipmap/ic_launcher_round"
android:supportsRtl="true"
android:theme="@style/Theme.TwoActivities">
<activity android:name=".SecondActivity"
android:label = "@string/activity2_name"
android:parentActivityName=".MainActivity">
<meta-data
android:name="android.support.PARENT_ACTIVITY"
android:value="com.example.android.twoactivities.MainActivity" />
</activity>
<activity
android:name=".MainActivity"
android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>
</activity>
</application>
</manifest>

5.
